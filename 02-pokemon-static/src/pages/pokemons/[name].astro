---
import type { GetStaticPaths } from "astro";
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list-response";
import Title from "@components/shared/Title.astro";
import { Icon } from "astro-icon/components";

// esta funcion es para definir las rutas estaticas que se van a generar
// en este caso, vamos a generar una ruta para cada pokemon que queramos mostrar
export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151"); // hacemos una peticion a la API de Pokemon
  const { results } = (await resp.json()) as PokemonListResponse; // obtenemos los datos de la respuesta

  // devolvemos el array de rutas estaticas que vamos a generar
  // cada ruta tendra el nombre del pokemon como parametro
  return results.map((item) => ({
    params: { name: item.name }, // definimos el nombre del pokemon como parametro de la ruta
    props: { name: item.name, url: item.url }, // pasamos las props al componente
  }));

  /*  return [
        { params: { name: 'bulbasaur' }, 
          props: { name: 'bulbasaur', url: 'https://pokeapi.co/api/v2/pokemon/1/' } },

        { params: { name: 'ivysaur' }, 
          props: { name: 'ivysaur', url: 'https://pokeapi.co/api/v2/pokemon/2/' } },

        { params: { name: 'charmander' }, 
          props: { name: 'charmander', url: 'https://pokeapi.co/api/v2/pokemon/4/' } },

        { params: { name: 'raticate' }, 
          props: { name: 'raticate', url: 'https://pokeapi.co/api/v2/pokemon/20/' } },
  ];
}) satisfies GetStaticPaths; */
}) satisfies GetStaticPaths;

const { name } = Astro.params; // obtenemos el nombre del pokemon de la ruta
const { url } = Astro.props; // obtenemos la url del pokemon de las props

const id = url.split("/").at(-2); // extraemos el ID del pokemon de la URL

// construimos la URL del sonido del pokemon
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<!-- en esta pagina le pasamos el nombre del pokemon a la ruta -->
<MainLayout
  title={`Pokémon - #${id} ${name}`}
  description={`Información sobre el Pokémon ${name}`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class=" flex flex-row ">
      <div>
        <button onclick="history.back()" class="text-blue-500">
          Regresar
        </button>

        <Title>
          {name}
        </Title>
      </div>

      <button id="btn-favorite" class="text-red-500 ml-2">
        <Icon name="heart-empty" size={40}/>
        <Icon class="hidden" name="heart-full2" size={40} />
       
      </button>
    </div>

    <PokemonCard name={name} url={url} isBig={true} />

    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
  </section>
</MainLayout>

<style>
  @reference "../../styles/global.css";
  a {
    @apply hover:underline;
    color: blue;
  }

  #btn-favorite {
    
    @apply hover:animate-pulse;
    
  }
</style>
